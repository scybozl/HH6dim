(* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *)
(*                                                                             *)
(*         This file has been automatically generated by FeynRules.            *)
(*                                                                             *)
(* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *)


FR$ModelInformation={
  ModelName->"EWChL",
  Authors -> {"Author"},
  Version -> "0.3",
  Date -> "16.02.2017",
  Institutions -> {"Institution"},
  Emails -> {"email"},
  URLs -> "web",
  References -> {"references"}};

FR$ClassesTranslation={A -> V[1], Z -> V[2], W -> V[3], G -> V[4], ghA -> U[1], ghZ -> U[2], ghWp -> U[3], ghWm -> U[4], ghG -> U[5], ve -> F[1], vm -> F[2], vt -> F[3], e -> F[4], mu -> F[5], ta -> F[6], u -> F[7], c -> F[8], t -> F[9], d -> F[10], s -> F[11], b -> F[12], G0 -> S[1], GP -> S[2], h -> S[3]};

FR$InteractionOrderPerturbativeExpansion={{QCD, 0}, {QED, 0}, {QL, 0}};

FR$GoldstoneList={S[1], S[2]};

(*     Declared indices    *)

IndexRange[ Index[Gluon] ] = NoUnfold[ Range[ 8 ] ]

IndexRange[ Index[SU2W] ] = Range[ 3 ]

IndexRange[ Index[Generation] ] = Range[ 3 ]

IndexRange[ Index[Colour] ] = NoUnfold[ Range[ 3 ] ]

IndexRange[ Index[SU2D] ] = Range[ 2 ]

(*     Declared particles    *)

M$ClassesDescription = {
V[1] == {
    SelfConjugate -> True,
    PropagatorType -> Sine,
    PropagatorArrow -> None,
    Mass -> 0,
    Indices -> {},
    PropagatorLabel -> "A" },

V[2] == {
    SelfConjugate -> True,
    PropagatorType -> Sine,
    PropagatorArrow -> None,
    Mass -> MZ,
    Indices -> {},
    PropagatorLabel -> "Z" },

V[3] == {
    SelfConjugate -> False,
    QuantumNumbers -> {Q},
    PropagatorType -> Sine,
    PropagatorArrow -> Forward,
    Mass -> MW,
    Indices -> {},
    PropagatorLabel -> "W" },

V[4] == {
    SelfConjugate -> True,
    PropagatorType -> Cycles,
    PropagatorArrow -> None,
    Mass -> 0,
    Indices -> {Index[Gluon]},
    PropagatorLabel -> "G" },

U[1] == {
    SelfConjugate -> False,
    QuantumNumbers -> {GhostNumber},
    PropagatorType -> GhostDash,
    PropagatorArrow -> Forward,
    Mass -> 0,
    Indices -> {},
    PropagatorLabel -> "ghA" },

U[2] == {
    SelfConjugate -> False,
    QuantumNumbers -> {GhostNumber},
    PropagatorType -> GhostDash,
    PropagatorArrow -> Forward,
    Mass -> MZ,
    Indices -> {},
    PropagatorLabel -> "ghZ" },

U[3] == {
    SelfConjugate -> False,
    QuantumNumbers -> {GhostNumber, Q},
    PropagatorType -> GhostDash,
    PropagatorArrow -> Forward,
    Mass -> MW,
    Indices -> {},
    PropagatorLabel -> "ghWp" },

U[4] == {
    SelfConjugate -> False,
    QuantumNumbers -> {GhostNumber, -Q},
    PropagatorType -> GhostDash,
    PropagatorArrow -> Forward,
    Mass -> MW,
    Indices -> {},
    PropagatorLabel -> "ghWm" },

U[5] == {
    SelfConjugate -> False,
    QuantumNumbers -> {GhostNumber},
    PropagatorType -> GhostDash,
    PropagatorArrow -> Forward,
    Mass -> 0,
    Indices -> {Index[Gluon]},
    PropagatorLabel -> "ghG" },

F[1] == {
    SelfConjugate -> False,
    QuantumNumbers -> {LeptonNumber},
    PropagatorType -> Straight,
    PropagatorArrow -> Forward,
    Mass -> 0,
    Indices -> {},
    PropagatorLabel -> "ve" },

F[2] == {
    SelfConjugate -> False,
    QuantumNumbers -> {LeptonNumber},
    PropagatorType -> Straight,
    PropagatorArrow -> Forward,
    Mass -> 0,
    Indices -> {},
    PropagatorLabel -> "vm" },

F[3] == {
    SelfConjugate -> False,
    QuantumNumbers -> {LeptonNumber},
    PropagatorType -> Straight,
    PropagatorArrow -> Forward,
    Mass -> 0,
    Indices -> {},
    PropagatorLabel -> "vt" },

F[4] == {
    SelfConjugate -> False,
    QuantumNumbers -> {-Q, LeptonNumber},
    PropagatorType -> Straight,
    PropagatorArrow -> Forward,
    Mass -> Me,
    Indices -> {},
    PropagatorLabel -> "e" },

F[5] == {
    SelfConjugate -> False,
    QuantumNumbers -> {-Q, LeptonNumber},
    PropagatorType -> Straight,
    PropagatorArrow -> Forward,
    Mass -> MMU,
    Indices -> {},
    PropagatorLabel -> "mu" },

F[6] == {
    SelfConjugate -> False,
    QuantumNumbers -> {-Q, LeptonNumber},
    PropagatorType -> Straight,
    PropagatorArrow -> Forward,
    Mass -> MTA,
    Indices -> {},
    PropagatorLabel -> "ta" },

F[7] == {
    SelfConjugate -> False,
    QuantumNumbers -> {(2*Q)/3},
    PropagatorType -> Straight,
    PropagatorArrow -> Forward,
    Mass -> MU,
    Indices -> {Index[Colour]},
    PropagatorLabel -> "u" },

F[8] == {
    SelfConjugate -> False,
    QuantumNumbers -> {(2*Q)/3},
    PropagatorType -> Straight,
    PropagatorArrow -> Forward,
    Mass -> MC,
    Indices -> {Index[Colour]},
    PropagatorLabel -> "c" },

F[9] == {
    SelfConjugate -> False,
    QuantumNumbers -> {(2*Q)/3},
    PropagatorType -> Straight,
    PropagatorArrow -> Forward,
    Mass -> MT,
    Indices -> {Index[Colour]},
    PropagatorLabel -> "t" },

F[10] == {
    SelfConjugate -> False,
    QuantumNumbers -> {-Q/3},
    PropagatorType -> Straight,
    PropagatorArrow -> Forward,
    Mass -> MD,
    Indices -> {Index[Colour]},
    PropagatorLabel -> "d" },

F[11] == {
    SelfConjugate -> False,
    QuantumNumbers -> {-Q/3},
    PropagatorType -> Straight,
    PropagatorArrow -> Forward,
    Mass -> MS,
    Indices -> {Index[Colour]},
    PropagatorLabel -> "s" },

F[12] == {
    SelfConjugate -> False,
    QuantumNumbers -> {-Q/3},
    PropagatorType -> Straight,
    PropagatorArrow -> Forward,
    Mass -> MB,
    Indices -> {Index[Colour]},
    PropagatorLabel -> "b" },

S[1] == {
    SelfConjugate -> True,
    PropagatorType -> ScalarDash,
    PropagatorArrow -> None,
    Mass -> MZ,
    Indices -> {},
    PropagatorLabel -> "G0" },

S[2] == {
    SelfConjugate -> False,
    QuantumNumbers -> {Q},
    PropagatorType -> ScalarDash,
    PropagatorArrow -> None,
    Mass -> MW,
    Indices -> {},
    PropagatorLabel -> "GP" },

S[3] == {
    SelfConjugate -> True,
    PropagatorType -> ScalarDash,
    PropagatorArrow -> None,
    Mass -> Mh,
    Indices -> {},
    PropagatorLabel -> "h" }
}


(*        Definitions       *)

GaugeXi[ V[1] ] = GaugeXi[A];
GaugeXi[ V[2] ] = GaugeXi[Z];
GaugeXi[ V[3] ] = GaugeXi[W];
GaugeXi[ V[4] ] = GaugeXi[G];
GaugeXi[ U[1] ] = GaugeXi[A];
GaugeXi[ U[2] ] = GaugeXi[Z];
GaugeXi[ U[3] ] = GaugeXi[W];
GaugeXi[ U[4] ] = GaugeXi[W];
GaugeXi[ U[5] ] = GaugeXi[G];
GaugeXi[ S[1] ] = GaugeXi[Z];
GaugeXi[ S[2] ] = GaugeXi[W];
GaugeXi[ S[3] ] = 1;

MZ[ ___ ] := MZ;
MW[ ___ ] := MW;
Me[ ___ ] := Me;
MMU[ ___ ] := MMU;
MTA[ ___ ] := MTA;
MU[ ___ ] := MU;
MC[ ___ ] := MC;
MT[ ___ ] := MT;
MD[ ___ ] := MD;
MS[ ___ ] := MS;
MB[ ___ ] := MB;
Mh[ ___ ] := Mh;


TheLabel[ V[4, {__}] ] := TheLabel[V[4]];
TheLabel[ U[5, {__}] ] := TheLabel[U[5]];
TheLabel[ F[7, {__}] ] := TheLabel[F[7]];
TheLabel[ F[8, {__}] ] := TheLabel[F[8]];
TheLabel[ F[9, {__}] ] := TheLabel[F[9]];
TheLabel[ F[10, {__}] ] := TheLabel[F[10]];
TheLabel[ F[11, {__}] ] := TheLabel[F[11]];
TheLabel[ F[12, {__}] ] := TheLabel[F[12]];


(*      Couplings (calculated by FeynRules)      *)

M$CouplingMatrices = {

C[ S[3] , S[3] , S[3] , S[3] ] == {{(-24*I)*chhhh*normh4, 0}},

C[ S[3] , S[3] , S[3] ] == {{(-6*I)*chhh*normh3*v, 0}},

C[ -F[12, {e1x2}] , F[12, {e2x2}] , S[3] ] == {{I*gc3*IndexDelta[e1x2, e2x2], 0}, {I*gc3*IndexDelta[e1x2, e2x2], 0}},

C[ S[3] , V[1] , V[1] ] == {{(-I)*gc4, 0}, {I*gc4, 0}, {0, 0}},

C[ S[3] , S[3] , V[4, {e1x2}] , V[4, {e2x2}] ] == {{(-I)*gc5*IndexDelta[e1x2, e2x2], 0}, {I*gc5*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ S[3] , V[4, {e1x2}] , V[4, {e2x2}] ] == {{(-I)*gc6*IndexDelta[e1x2, e2x2], 0}, {I*gc6*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ S[3] , V[1] , V[2] ] == {{(-I)*gc7, 0}, {I*gc7, 0}, {0, 0}},

C[ -U[5, {e1x1}] , U[5, {e2x1}] , V[4, {e3x2}] ] == {{gc8*SUNF[e3x2, e1x1, e2x1], 0}, {gc8*SUNF[e3x2, e1x1, e2x1], 0}, {0, 0}},

C[ V[4, {e1x2}] , V[4, {e2x2}] , V[4, {e3x2}] ] == {{-(gc9*SUNF[e1x2, e2x2, e3x2]), 0}, {gc9*SUNF[e1x2, e2x2, e3x2], 0}, {gc9*SUNF[e1x2, e2x2, e3x2], 0}, {-(gc9*SUNF[e1x2, e2x2, e3x2]), 0}, {-(gc9*SUNF[e1x2, e2x2, e3x2]), 0}, {gc9*SUNF[e1x2, e2x2, e3x2], 0}},

C[ V[4, {e1x2}] , V[4, {e2x2}] , V[4, {e3x2}] , V[4, {e4x2}] ] == {{(-I)*gc10*(SUNF[e1x2, e2x2, e3x2, e4x2] + SUNF[e1x2, e3x2, e2x2, e4x2]), 0}, {I*gc10*(SUNF[e1x2, e2x2, e3x2, e4x2] - SUNF[e1x2, e4x2, e2x2, e3x2]), 0}, {I*gc10*(SUNF[e1x2, e3x2, e2x2, e4x2] + SUNF[e1x2, e4x2, e2x2, e3x2]), 0}},

C[ S[3] , V[4, {e1x2}] , V[4, {e2x2}] , V[4, {e3x2}] ] == {{-(gc11*SUNF[e1x2, e2x2, e3x2]), 0}, {gc11*SUNF[e1x2, e2x2, e3x2], 0}, {gc11*SUNF[e1x2, e2x2, e3x2], 0}, {-(gc11*SUNF[e1x2, e2x2, e3x2]), 0}, {-(gc11*SUNF[e1x2, e2x2, e3x2]), 0}, {gc11*SUNF[e1x2, e2x2, e3x2], 0}},

C[ S[3] , V[4, {e1x2}] , V[4, {e2x2}] , V[4, {e3x2}] , V[4, {e4x2}] ] == {{(-I)*gc12*(SUNF[e1x2, e2x2, e3x2, e4x2] + SUNF[e1x2, e3x2, e2x2, e4x2]), 0}, {I*gc12*(SUNF[e1x2, e2x2, e3x2, e4x2] - SUNF[e1x2, e4x2, e2x2, e3x2]), 0}, {I*gc12*(SUNF[e1x2, e3x2, e2x2, e4x2] + SUNF[e1x2, e4x2, e2x2, e3x2]), 0}},

C[ S[3] , S[3] , V[4, {e1x2}] , V[4, {e2x2}] , V[4, {e3x2}] ] == {{-(gc13*SUNF[e1x2, e2x2, e3x2]), 0}, {gc13*SUNF[e1x2, e2x2, e3x2], 0}, {gc13*SUNF[e1x2, e2x2, e3x2], 0}, {-(gc13*SUNF[e1x2, e2x2, e3x2]), 0}, {-(gc13*SUNF[e1x2, e2x2, e3x2]), 0}, {gc13*SUNF[e1x2, e2x2, e3x2], 0}},

C[ S[3] , S[3] , V[4, {e1x2}] , V[4, {e2x2}] , V[4, {e3x2}] , V[4, {e4x2}] ] == {{(-I)*gc14*(SUNF[e1x2, e2x2, e3x2, e4x2] + SUNF[e1x2, e3x2, e2x2, e4x2]), 0}, {I*gc14*(SUNF[e1x2, e2x2, e3x2, e4x2] - SUNF[e1x2, e4x2, e2x2, e3x2]), 0}, {I*gc14*(SUNF[e1x2, e3x2, e2x2, e4x2] + SUNF[e1x2, e4x2, e2x2, e3x2]), 0}},

C[ -F[6] , F[6] , S[3] ] == {{I*gc15, 0}, {I*gc15, 0}},

C[ -F[9, {e1x2}] , F[9, {e2x2}] , S[3] ] == {{I*gc16*IndexDelta[e1x2, e2x2], 0}, {I*gc16*IndexDelta[e1x2, e2x2], 0}},

C[ -F[9, {e1x2}] , F[9, {e2x2}] , S[3] , S[3] ] == {{I*gc17*IndexDelta[e1x2, e2x2], 0}, {I*gc17*IndexDelta[e1x2, e2x2], 0}},

C[ V[1] , V[3] , -V[3] ] == {{(-I)*gc18, 0}, {I*gc18, 0}, {I*gc18, 0}, {(-I)*gc18, 0}, {(-I)*gc18, 0}, {I*gc18, 0}},

C[ S[3] , S[3] , V[3] , -V[3] ] == {{0, 0}, {0, 0}, {I*gc19, 0}},

C[ S[3] , V[3] , -V[3] ] == {{0, 0}, {0, 0}, {I*gc20, 0}},

C[ V[1] , V[1] , V[3] , -V[3] ] == {{(-I)*gc21, 0}, {(-I)*gc21, 0}, {(2*I)*gc21, 0}},

C[ V[3] , -V[3] , V[2] ] == {{(-I)*gc22, 0}, {I*gc22, 0}, {I*gc22, 0}, {(-I)*gc22, 0}, {(-I)*gc22, 0}, {I*gc22, 0}},

C[ V[3] , V[3] , -V[3] , -V[3] ] == {{(-I)*gc23, 0}, {(-I)*gc23, 0}, {(2*I)*gc23, 0}},

C[ V[1] , V[3] , -V[3] , V[2] ] == {{(-2*I)*gc24, 0}, {I*gc24, 0}, {I*gc24, 0}},

C[ S[3] , S[3] , V[2] , V[2] ] == {{0, 0}, {0, 0}, {I*gc25, 0}},

C[ S[3] , V[2] , V[2] ] == {{0, 0}, {0, 0}, {I*gc26, 0}},

C[ V[3] , -V[3] , V[2] , V[2] ] == {{(-I)*gc27, 0}, {(-I)*gc27, 0}, {(2*I)*gc27, 0}},

C[ -F[4] , F[4] , V[1] ] == {{I*gc28, 0}, {I*gc28, 0}},

C[ -F[5] , F[5] , V[1] ] == {{I*gc29, 0}, {I*gc29, 0}},

C[ -F[6] , F[6] , V[1] ] == {{I*gc30, 0}, {I*gc30, 0}},

C[ -F[8, {e1x2}] , F[8, {e2x2}] , V[1] ] == {{I*gc31*IndexDelta[e1x2, e2x2], 0}, {I*gc31*IndexDelta[e1x2, e2x2], 0}},

C[ -F[9, {e1x2}] , F[9, {e2x2}] , V[1] ] == {{I*gc32*IndexDelta[e1x2, e2x2], 0}, {I*gc32*IndexDelta[e1x2, e2x2], 0}},

C[ -F[7, {e1x2}] , F[7, {e2x2}] , V[1] ] == {{I*gc33*IndexDelta[e1x2, e2x2], 0}, {I*gc33*IndexDelta[e1x2, e2x2], 0}},

C[ -F[12, {e1x2}] , F[12, {e2x2}] , V[1] ] == {{I*gc34*IndexDelta[e1x2, e2x2], 0}, {I*gc34*IndexDelta[e1x2, e2x2], 0}},

C[ -F[10, {e1x2}] , F[10, {e2x2}] , V[1] ] == {{I*gc35*IndexDelta[e1x2, e2x2], 0}, {I*gc35*IndexDelta[e1x2, e2x2], 0}},

C[ -F[11, {e1x2}] , F[11, {e2x2}] , V[1] ] == {{I*gc36*IndexDelta[e1x2, e2x2], 0}, {I*gc36*IndexDelta[e1x2, e2x2], 0}},

C[ -F[8, {e1x2}] , F[8, {e2x2}] , V[4, {e3x2}] ] == {{I*gc37*SUNT[e3x2, e1x2, e2x2], 0}, {I*gc37*SUNT[e3x2, e1x2, e2x2], 0}},

C[ -F[9, {e1x2}] , F[9, {e2x2}] , V[4, {e3x2}] ] == {{I*gc38*SUNT[e3x2, e1x2, e2x2], 0}, {I*gc38*SUNT[e3x2, e1x2, e2x2], 0}},

C[ -F[7, {e1x2}] , F[7, {e2x2}] , V[4, {e3x2}] ] == {{I*gc39*SUNT[e3x2, e1x2, e2x2], 0}, {I*gc39*SUNT[e3x2, e1x2, e2x2], 0}},

C[ -F[12, {e1x2}] , F[12, {e2x2}] , V[4, {e3x2}] ] == {{I*gc40*SUNT[e3x2, e1x2, e2x2], 0}, {I*gc40*SUNT[e3x2, e1x2, e2x2], 0}},

C[ -F[10, {e1x2}] , F[10, {e2x2}] , V[4, {e3x2}] ] == {{I*gc41*SUNT[e3x2, e1x2, e2x2], 0}, {I*gc41*SUNT[e3x2, e1x2, e2x2], 0}},

C[ -F[11, {e1x2}] , F[11, {e2x2}] , V[4, {e3x2}] ] == {{I*gc42*SUNT[e3x2, e1x2, e2x2], 0}, {I*gc42*SUNT[e3x2, e1x2, e2x2], 0}},

C[ -F[8, {e1x2}] , F[12, {e2x2}] , V[3] ] == {{I*gc43*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[8, {e1x2}] , F[10, {e2x2}] , V[3] ] == {{I*gc44*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[8, {e1x2}] , F[11, {e2x2}] , V[3] ] == {{I*gc45*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[9, {e1x2}] , F[12, {e2x2}] , V[3] ] == {{I*gc46*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[9, {e1x2}] , F[10, {e2x2}] , V[3] ] == {{I*gc47*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[9, {e1x2}] , F[11, {e2x2}] , V[3] ] == {{I*gc48*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[7, {e1x2}] , F[12, {e2x2}] , V[3] ] == {{I*gc49*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[7, {e1x2}] , F[10, {e2x2}] , V[3] ] == {{I*gc50*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[7, {e1x2}] , F[11, {e2x2}] , V[3] ] == {{I*gc51*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[12, {e1x2}] , F[8, {e2x2}] , -V[3] ] == {{I*gc52*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[12, {e1x2}] , F[9, {e2x2}] , -V[3] ] == {{I*gc53*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[12, {e1x2}] , F[7, {e2x2}] , -V[3] ] == {{I*gc54*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[10, {e1x2}] , F[8, {e2x2}] , -V[3] ] == {{I*gc55*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[10, {e1x2}] , F[9, {e2x2}] , -V[3] ] == {{I*gc56*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[10, {e1x2}] , F[7, {e2x2}] , -V[3] ] == {{I*gc57*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[11, {e1x2}] , F[8, {e2x2}] , -V[3] ] == {{I*gc58*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[11, {e1x2}] , F[9, {e2x2}] , -V[3] ] == {{I*gc59*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[11, {e1x2}] , F[7, {e2x2}] , -V[3] ] == {{I*gc60*IndexDelta[e1x2, e2x2], 0}, {0, 0}},

C[ -F[1] , F[4] , V[3] ] == {{I*gc61, 0}, {0, 0}},

C[ -F[2] , F[5] , V[3] ] == {{I*gc62, 0}, {0, 0}},

C[ -F[3] , F[6] , V[3] ] == {{I*gc63, 0}, {0, 0}},

C[ -F[4] , F[1] , -V[3] ] == {{I*gc64, 0}, {0, 0}},

C[ -F[5] , F[2] , -V[3] ] == {{I*gc65, 0}, {0, 0}},

C[ -F[6] , F[3] , -V[3] ] == {{I*gc66, 0}, {0, 0}},

C[ -F[8, {e1x2}] , F[8, {e2x2}] , V[2] ] == {{I*gc67L*IndexDelta[e1x2, e2x2], 0}, {I*gc67R*IndexDelta[e1x2, e2x2], 0}},

C[ -F[9, {e1x2}] , F[9, {e2x2}] , V[2] ] == {{I*gc68L*IndexDelta[e1x2, e2x2], 0}, {I*gc68R*IndexDelta[e1x2, e2x2], 0}},

C[ -F[7, {e1x2}] , F[7, {e2x2}] , V[2] ] == {{I*gc69L*IndexDelta[e1x2, e2x2], 0}, {I*gc69R*IndexDelta[e1x2, e2x2], 0}},

C[ -F[12, {e1x2}] , F[12, {e2x2}] , V[2] ] == {{I*gc70L*IndexDelta[e1x2, e2x2], 0}, {I*gc70R*IndexDelta[e1x2, e2x2], 0}},

C[ -F[10, {e1x2}] , F[10, {e2x2}] , V[2] ] == {{I*gc71L*IndexDelta[e1x2, e2x2], 0}, {I*gc71R*IndexDelta[e1x2, e2x2], 0}},

C[ -F[11, {e1x2}] , F[11, {e2x2}] , V[2] ] == {{I*gc72L*IndexDelta[e1x2, e2x2], 0}, {I*gc72R*IndexDelta[e1x2, e2x2], 0}},

C[ -F[1] , F[1] , V[2] ] == {{I*gc73, 0}, {0, 0}},

C[ -F[2] , F[2] , V[2] ] == {{I*gc74, 0}, {0, 0}},

C[ -F[3] , F[3] , V[2] ] == {{I*gc75, 0}, {0, 0}},

C[ -F[4] , F[4] , V[2] ] == {{I*gc76L, 0}, {I*gc76R, 0}},

C[ -F[5] , F[5] , V[2] ] == {{I*gc77L, 0}, {I*gc77R, 0}},

C[ -F[6] , F[6] , V[2] ] == {{I*gc78L, 0}, {I*gc78R, 0}}

}

(* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *)

(* Parameter replacement lists (These lists were created by FeynRules) *)

(* FA Couplings *)

M$FACouplings = {
     gc3 -> -(cb*yyb),
     gc4 -> (-4*cgaga*EL^2)/(loop*v),
     gc5 -> (-4*cgghh*GS^2)/(loop*v^2),
     gc6 -> (-2*cgg*GS^2)/(loop*v),
     gc7 -> (-2*cZga*EL^2)/(cw*loop*v),
     gc8 -> GS,
     gc9 -> -GS,
     gc10 -> -GS^2,
     gc11 -> (2*cgg*GS^3)/(loop*v),
     gc12 -> (2*cgg*GS^4)/(loop*v),
     gc13 -> (4*cgghh*GS^3)/(loop*v^2),
     gc14 -> (4*cgghh*GS^4)/(loop*v^2),
     gc15 -> -(ctau*yytau),
     gc16 -> -(ct*yyt),
     gc17 -> (-2*cthh*yyt)/v,
     gc18 -> EL,
     gc19 -> (2*cVhh*MW^2)/v^2,
     gc20 -> (2*cV*MW^2)/v,
     gc21 -> -EL^2,
     gc22 -> (cw*EL)/sw,
     gc23 -> EL^2/sw^2,
     gc24 -> (cw*EL^2)/sw,
     gc25 -> (2*cVhh*MZ^2)/v^2,
     gc26 -> (2*cV*MZ^2)/v,
     gc27 -> -((cw^2*EL^2)/sw^2),
     gc28 -> -EL,
     gc29 -> -EL,
     gc30 -> -EL,
     gc31 -> (2*EL)/3,
     gc32 -> (2*EL)/3,
     gc33 -> (2*EL)/3,
     gc34 -> -EL/3,
     gc35 -> -EL/3,
     gc36 -> -EL/3,
     gc37 -> GS,
     gc38 -> GS,
     gc39 -> GS,
     gc40 -> GS,
     gc41 -> GS,
     gc42 -> GS,
     gc43 -> (CKM2x3*EL)/(Sqrt[2]*sw),
     gc44 -> (CKM2x1*EL)/(Sqrt[2]*sw),
     gc45 -> (CKM2x2*EL)/(Sqrt[2]*sw),
     gc46 -> (CKM3x3*EL)/(Sqrt[2]*sw),
     gc47 -> (CKM3x1*EL)/(Sqrt[2]*sw),
     gc48 -> (CKM3x2*EL)/(Sqrt[2]*sw),
     gc49 -> (CKM1x3*EL)/(Sqrt[2]*sw),
     gc50 -> (CKM1x1*EL)/(Sqrt[2]*sw),
     gc51 -> (CKM1x2*EL)/(Sqrt[2]*sw),
     gc52 -> (EL*Conjugate[CKM2x3])/(Sqrt[2]*sw),
     gc53 -> (EL*Conjugate[CKM3x3])/(Sqrt[2]*sw),
     gc54 -> (EL*Conjugate[CKM1x3])/(Sqrt[2]*sw),
     gc55 -> (EL*Conjugate[CKM2x1])/(Sqrt[2]*sw),
     gc56 -> (EL*Conjugate[CKM3x1])/(Sqrt[2]*sw),
     gc57 -> (EL*Conjugate[CKM1x1])/(Sqrt[2]*sw),
     gc58 -> (EL*Conjugate[CKM2x2])/(Sqrt[2]*sw),
     gc59 -> (EL*Conjugate[CKM3x2])/(Sqrt[2]*sw),
     gc60 -> (EL*Conjugate[CKM1x2])/(Sqrt[2]*sw),
     gc61 -> EL/(Sqrt[2]*sw),
     gc62 -> EL/(Sqrt[2]*sw),
     gc63 -> EL/(Sqrt[2]*sw),
     gc64 -> EL/(Sqrt[2]*sw),
     gc65 -> EL/(Sqrt[2]*sw),
     gc66 -> EL/(Sqrt[2]*sw),
     gc67L -> (cw*EL)/(2*sw) - (EL*sw)/(6*cw),
     gc67R -> (-2*EL*sw)/(3*cw),
     gc68L -> (cw*EL)/(2*sw) - (EL*sw)/(6*cw),
     gc68R -> (-2*EL*sw)/(3*cw),
     gc69L -> (cw*EL)/(2*sw) - (EL*sw)/(6*cw),
     gc69R -> (-2*EL*sw)/(3*cw),
     gc70L -> -(EL*(3*cw^2 + sw^2))/(6*cw*sw),
     gc70R -> (EL*sw)/(3*cw),
     gc71L -> -(EL*(3*cw^2 + sw^2))/(6*cw*sw),
     gc71R -> (EL*sw)/(3*cw),
     gc72L -> -(EL*(3*cw^2 + sw^2))/(6*cw*sw),
     gc72R -> (EL*sw)/(3*cw),
     gc73 -> (EL*(cw^2 + sw^2))/(2*cw*sw),
     gc74 -> (EL*(cw^2 + sw^2))/(2*cw*sw),
     gc75 -> (EL*(cw^2 + sw^2))/(2*cw*sw),
     gc76L -> -(EL*(cw^2 - sw^2))/(2*cw*sw),
     gc76R -> (EL*sw)/cw,
     gc77L -> -(EL*(cw^2 - sw^2))/(2*cw*sw),
     gc77R -> (EL*sw)/cw,
     gc78L -> -(EL*(cw^2 - sw^2))/(2*cw*sw),
     gc78R -> (EL*sw)/cw};

